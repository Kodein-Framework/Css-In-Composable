name: Build and deploy a release

on:
  release:
    types: [published]

jobs:
  create-staging-repository:
    name: Create staging repository
    runs-on: ubuntu-latest
    outputs:
      repository_id: ${{ steps.create.outputs.repository_id }}
    steps:
      - id: create
        uses: nexus-actions/create-nexus-staging-repo@v1.1
        with:
          base_url: https://s01.oss.sonatype.org/service/local/
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_profile_id: ${{ secrets.SONATYPE_PROFILE_ID }}
          description: ${{ github.repository }}/${{ github.workflow }}#${{ github.run_number }}

  build-upload:
    needs: create-staging-repository
    runs-on: macos-latest
    env:
      SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      GPG_PRIVATE_KEY: ${{ secrets.PGP_SIGNING_KEY }}
      GPG_PRIVATE_PASSWORD: ${{ secrets.PGP_SIGNING_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 #v3
      - name: Cached Gradle
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629 #v2
      - name: Set up JDK 17
        uses: actions/setup-java@de1bb2b0c5634f0fc4438d7aa9944e68f9bf86cc #v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Check
        run: ./gradlew build check
        shell: bash
      - name: Upload
        run: ./gradlew publishAllPublicationsToOssrhStagingRepository -Porg.kodein.sonatype.repositoryId=${{ needs.create-staging-repository.outputs.repository_id }}
        shell: bash

  drop-or-release:
    needs: [create-staging-repository, build-upload]
    runs-on: ubuntu-20.04
    if: ${{ needs.create-staging-repository.result == 'success' }}
    steps:
      - name: Drop
        if: ${{ needs.build-upload.result != 'success' }}
        uses: nexus-actions/drop-nexus-staging-repo@v1
        with:
          base_url: https://s01.oss.sonatype.org/service/local/
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_repository_id: ${{ needs.create-staging-repository.outputs.repository_id }}
      - name: Release
        if: ${{ needs.build-upload.result == 'success' }}
        uses: nexus-actions/release-nexus-staging-repo@v1
        with:
          base_url: https://s01.oss.sonatype.org/service/local/
          username: ${{ secrets.SONATYPE_USERNAME }}
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_repository_id: ${{ needs.create-staging-repository.outputs.repository_id }}